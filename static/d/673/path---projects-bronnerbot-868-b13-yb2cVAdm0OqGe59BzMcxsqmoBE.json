{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(\"a\", {\n      href: \"\",\n      target: \"_blank\"\n    }, `@bronnerbot`), ` was my first ebooks-style\n`, React.createElement(\"a\", {\n      href: \"https://en.wikipedia.org/wiki/Markov_chain\",\n      target: \"_blank\"\n    }, `Markov`), `\nTwitterbot. I had the idea after absentmindedly reading a\n`, React.createElement(\"a\", {\n      href: \"https://www.drbronner.com/\",\n      target: \"_blank\"\n    }, `Dr. Bronner’s`), `\n`, React.createElement(\"a\", {\n      href: \"https://shop.drbronner.com/pub/media/catalog/product/b/r/bronner-us-liquid-32oz-peppermint-lspe32us5-02.jpg\",\n      target: \"_blank\"\n    }, `soap\nbottle`), `, which is a treat I recommend to anyone who hasn’t already had the\npleasure. The label, rambling, whimsical, and circuitous, almost seems as if it\nwere generated from a Markov chain rather than written by Dr. Bronner himself.\nSo, I figured, why not train a model on copy transcribed from each individual\nlabel?`), React.createElement(\"blockquote\", {\n      className: \"twitter-tweet\",\n      \"data-lang\": \"en\"\n    }, React.createElement(\"p\", {\n      lang: \"en\",\n      dir: \"ltr\"\n    }, \"A PSALM OF SOAP EXCELLENCE\"), \"\\u2014 bronnerbot (@bronnerbot) \", React.createElement(\"a\", {\n      href: \"https://twitter.com/bronnerbot/status/883838107661078528?ref_src=twsrc%5Etfw\"\n    }, \"July 9, 2017\")), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `I found several labels ready-transcribed online, but for the remaining few I\nfound an image and typed by hand. (This explains bot typos, which happen every\nso often). Each variety of soap has a slightly different label, which made for\nan 8,000+ word\n`, React.createElement(\"a\", {\n      href: \"https://github.com/prichey/bronnerbot/blob/master/corpus/label.txt\",\n      target: \"_blank\"\n    }, `text\nfile`), ` to train the model. After generating the model, I scheduled the bot to\ntweet every 6 hours and @bronnerbot was live. It has been tweeting regularly\nsince 2015, and has tweeted over 5,000 times. The bot gained only a handful of\nfollowers (39, at time of this writing), but ultimately I made the bot for\nmyself. Most of its tweets are nonsensical riffs on ‘ALL-ONE! ALL-ONE!’ (which\nis a crutch Dr. Bronner leaned on more often than any other), but occasionally\nthe bot tweets something serendipitously poetic. I’m convinced all that\ntranscription was worth it.`), React.createElement(\"blockquote\", {\n      className: \"twitter-tweet\",\n      \"data-lang\": \"en\"\n    }, React.createElement(\"p\", {\n      lang: \"en\",\n      dir: \"ltr\"\n    }, \"Soap can make Love last 1 trillion years of sweet eternities!\"), \"\\u2014 bronnerbot (@bronnerbot) \", React.createElement(\"a\", {\n      href: \"https://twitter.com/bronnerbot/status/875774977609478144?ref_src=twsrc%5Etfw\"\n    }, \"June 16, 2017\")));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"@bronnerbot","link":"https://twitter.com/bronnerbot","repo":"https://github.com/prichey/bronnerbot","date":"2015","lang":"Ruby"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/projects/bronnerbot/"}}