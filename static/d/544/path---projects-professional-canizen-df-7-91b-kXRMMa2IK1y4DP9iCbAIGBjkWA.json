{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `In 2016, `, React.createElement(XA, {\n      href: \"https://www.barkleyus.com/\"\n    }, `Barkley`), ` underwent major renovations on the 4th floor of the old `, React.createElement(XA, {\n      href: \"https://en.wikipedia.org/wiki/TWA_Corporate_Headquarters_Building\"\n    }, `TWA headquarters`), ` it calls home. The space, formerly consisting mostly of client-specific ‘war-rooms’, was opened up as a collaboration space for all partners. It included an expanded company kitchen and lunch area, as well as two ‘zen rooms’, light- and sound-proof rooms no more than 6 feet on a side, for partners to use for work, sleep, or (ostensibly) meditation.`), React.createElement(\"div\", {\n      className: \"blog-inset\"\n    }, React.createElement(ZoomImage, {\n      src: doors,\n      alt: \"Zen Room Doors\"\n    })), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The rooms were great in practice, but there was a glaring problem: there was no way to tell if a room was available without making the trek up from the 2nd or 3rd floor. As a developer, one of my most base instincts is to problem-solve my way out of (unnecessary) physical activity. So, that’s just what I did.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Both of the rooms have a red light outside their door to indicate its occupancy. I added a `, React.createElement(XA, {\n      href: \"https://www.amazon.com/Onite-2-Pack-Standard-Holder-Adapter/dp/B01EHAE56S\"\n    }, `socket adapter`), ` to each of the outlets, so that whenever the light came on, it powered the socket. My coworker `, React.createElement(XA, {\n      href: \"https://about.me/ricky.catto\"\n    }, `Ricky`), ` and I designed and 3d-printed a small `, React.createElement(XA, {\n      href: \"https://www.thingiverse.com/thing:1948319\"\n    }, `housing`), ` which contains a wifi-enabled `, React.createElement(XA, {\n      href: \"https://www.particle.io/products/hardware/photon-wifi-dev-kit\"\n    }, `Particle Photon`), ` microcontroller and a USB power-adapter. Whenever the light turns on, the photon connects to wifi and broadcasts its status. A small script runs on a server and checks if either of the rooms are available, and if the status has changed, removes the previous status and tweets out the new one. Accurate to the minute, you can know, beyond a doubt, if you can, indeed, zen.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Check out the `, React.createElement(XA, {\n      href: \"http://www.instructables.com/id/Spy-on-Your-Lightbulbs/\"\n    }, `Instructable`), ` for more information.`));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"@canizen","link":"https://twitter.com/canizen","repo":"https://github.com/MoonshotLab/state-of-zen","date":"2016","lang":"Node.js"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/projects/professional/canizen/"}}