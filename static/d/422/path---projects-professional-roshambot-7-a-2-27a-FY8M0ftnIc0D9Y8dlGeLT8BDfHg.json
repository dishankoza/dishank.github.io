{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Roshambot (more annoyingly styled RoShamBot) was my first project working with `, React.createElement(XA, {\n      href: \"https://www.barkleyus.com/\"\n    }, `Barkley`), `’s innovation lab, `, React.createElement(XA, {\n      href: \"http://moonshot.barkleyus.com\"\n    }, `Moonshot`), `. The idea for the project was to make artificial intelligence more easily understandable. We wanted to make the experience accessible to anyone, regardless of technical experience, so we decided to try and train an artificial intelligence to play a common, universal game. As luck would have it, a local bank just a few blocks away from Barkley holds an annual Rock-Paper-Scissors competition, et voilà, we decided to create an artificially intelligent RPS player.`), React.createElement(\"div\", {\n      className: \"blog-inset\"\n    }, React.createElement(ZoomImage, {\n      src: hand,\n      zoomSrc: handZoom,\n      alt: \"Roshambot Hand\"\n    })), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The bot is comprised of an animatronic, 3D-printed hand rising out of a pedestal which houses both the laptop running the main logic program, a `, React.createElement(XA, {\n      href: \"https://en.wikipedia.org/wiki/Leap_Motion#Technology\"\n    }, `Leap Motion`), ` controller, as well as an Arduino Uno which communicates with the laptop and controls the lights and scoreboard. To play, a user walks up to the machine and holds their hand above the sensor for 5 seconds. Then, after a countdown, both the player and the bot play their hands, and the bot uses the Leap Motion controller to figure out what the human played, and if the throw was a win, loss, or tie.`), React.createElement(\"div\", {\n      className: \"blog-inset\"\n    }, React.createElement(ZoomImage, {\n      src: pedestal,\n      zoomSrc: pedestalZoom,\n      alt: \"Roshambot Hand\"\n    })), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Roshambot maintains a database of every throw played against it, as well as the ‘context’ for each of those throws. This allows the bot to make inferences into how the individual plays, as well as how people tend to play, in general. It might find that people who play Rock and then Scissors typically switch back to Rock for the third throw. Or, a particular individual might tend towards Paper. In a game as random as Rock-Paper-Scissors, any universal commonalities are difficult to find, but with individual players, the bot can find and exploit subconscious biases, something I found to be truly remarkable (a fact shown by this eerily good `, React.createElement(XA, {\n      href: \"http://www.nytimes.com/interactive/science/rock-paper-scissors.html\"\n    }, `simulation`), ` made by the New York Times).`), React.createElement(\"div\", {\n      className: \"blog-inset\"\n    }, React.createElement(\"iframe\", {\n      className: \"youtube\",\n      src: \"https://www.youtube.com/embed/uS2KD28gLHM?rel=0&showinfo=0\",\n      frameBorder: \"0\",\n      allowFullScreen: true\n    })), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `While we weren’t able to enter Roshambot into the RPS competition, we did bring it along to give competitors a chance to warm up. The crowd loved interacting with a device that was very clearly ‘unhuman’, yet possesses the capabilities to learn. Roshambot, at the end of the night, was bested by the winner of the RPS competition in a dramatic bout. But it was a close one, 2 to 3. The bot’s been training, getting smarter and smarter, and we think it’s only a matter of time before it returns to squash its puny human oppressors.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `For more info, check out this `, React.createElement(XA, {\n      href: \"https://medium.com/moonshotlab/man-vs-machine-learning-40a39f7f936\"\n    }, `post`), ` I wrote for the Moonshot `, React.createElement(XA, {\n      href: \"https://medium.com/moonshotlab\"\n    }, `blog`), `.`));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Roshambot","link":"","repo":"https://github.com/MoonshotLab/RoShamBot","date":"2016","lang":"Python, Arduino"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/projects/professional/roshambot/"}}