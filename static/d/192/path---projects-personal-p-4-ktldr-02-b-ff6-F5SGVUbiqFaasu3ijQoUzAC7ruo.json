{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(\"section\", {\n      className: \"blog-section\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Sometimes an idea gets lodged in the back of your head and there’s nothing you can do but to bring it into the world, no matter how inane. This project was one of those ideas. I originally bought the domain in October 2017 and in the time since have started fresh at least 4 different times - most recently, about a month ago, spurred on by a bout of sober productivity (hello Dry January!) and an interest in playing around with the soon-to-be-released `, React.createElement(\"a\", {\n      href: \"https://reactjs.org/docs/hooks-intro.html\"\n    }, `React Hooks`), `.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `So, the idea: `, React.createElement(\"a\", {\n      href: \"https://pitchfork.com/\"\n    }, `Pitchfork`), ` `, React.createElement(\"a\", {\n      href: \"https://en.wiktionary.org/wiki/too_long;_didn%27t_read#English\"\n    }, `TL;DR`), `. (That’s it.)`), React.createElement(\"div\", {\n      className: \"blog-inset\"\n    }, React.createElement(ZoomImage, {\n      src: p4ktldr,\n      zoomSrc: p4ktldrZoom,\n      alt: \"EDIT\"\n    })), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Pitchfork (sometimes shortened as P4k) is a website of various repute that covers and critiques popular music, both mainstream and independent. It for years was (and to some extent still is) known as the preeminent arbiter of opinions on ‘hipster’ music (`, React.createElement(\"a\", {\n      href: \"https://www.urbandictionary.com/define.php?term=Pitchfork%20Hipster\"\n    }, `whatever that means`), `).  Albums are given a rating 0 - 10, and the best are given the distinction of ’`, React.createElement(\"a\", {\n      href: \"https://pitchfork.com/reviews/best/albums/\"\n    }, `Best New Music`), `’. A rave review can lead to an invitation to play at `, React.createElement(\"a\", {\n      href: \"https://pitchforkmusicfestival.com\"\n    }, `Pitchfork Festival`), `, while a pan can be damning.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Let’s set aside the extreme subjectivity of attempting to objectively score any piece of art. (This is a big ask, I know.) Regardless of the value given to a certain review, at the very least I believe that Pitchfork (much as any other establishment concerned with critique) attempts to articulate a consistent viewpoint. This, in my opinion, is useful, even if not fully realized.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Whenever I am recommended a band to listen to, I like to have a place to start. I could pick an album at random, or I could seek out a aggregator like `, React.createElement(\"a\", {\n      href: \"https://www.metacritic.com/\"\n    }, `metacritic`), `, but oftentimes I start with whatever’s most highly rated on Pitchfork. I may end up disagreeing, but it’s a place to start, and it usually works out okay. The only problem is, there isn’t an easy way to do this: I’d search a particular artist, open up each album’s review in a new tab, and scan these to find the ‘best’. This is not an exercise of nuance; it is one of efficiency.`), React.createElement(\"div\", {\n      className: \"blog-inset\"\n    }, React.createElement(ZoomImage, {\n      src: pitchforkWilco,\n      zoomSrc: pitchforkWilcoZoom,\n      alt: \"EDIT\"\n    })), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `So, I made `, React.createElement(\"a\", {\n      href: \"https://p4ktldr.com/\"\n    }, `p4ktldr`), `. Search for an artist, see the albums sorted by rating. Click through to read further. I use the same APIs that pitchfork.com uses, both for the `, React.createElement(\"a\", {\n      href: \"https://github.com/prichey/p4ktldr/blob/master/src/components/Search/api.js#L16\"\n    }, `artist suggestions`), ` as you type, and also for the `, React.createElement(\"a\", {\n      href: \"https://github.com/prichey/p4ktldr/blob/master/src/components/Search/api.js#L33\"\n    }, `album reviews`), ` once you select a certain artist.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The site itself is a simple React app hosted on `, React.createElement(\"a\", {\n      href: \"https://www.netlify.com/\"\n    }, `Netlify`), `. There are just three routes, `, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"className\": \"language-text\"\n      }\n    }, `/`), `, `, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"className\": \"language-text\"\n      }\n    }, `/search/:artist`), `, and `, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"className\": \"language-text\"\n      }\n    }, `/about`), `. As I mentioned above, I used React Hooks which on the whole were incredibly pleasant to use: while it took a bit of time to get used to, transitioning from thinking in terms of `, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"className\": \"language-text\"\n      }\n    }, `componentDidMount`), ` and `, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"className\": \"language-text\"\n      }\n    }, `componentDidUpdate`), ` to Hooks’ `, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"className\": \"language-text\"\n      }\n    }, `useEffect`), ` turned out to be entirely ergonomic.`), React.createElement(\"div\", {\n      className: \"blog-inset\"\n    }, React.createElement(ZoomImage, {\n      src: p4ktldrWilco,\n      zoomSrc: p4ktldrWilcoZoom,\n      alt: \"EDIT\"\n    })), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `I’m glad to be done with this one. It’ll be useful to me, regardless of whether or not anyone else finds it worthwhile. Sometimes an itch goes away, and sometimes you have to build a stupid website to scratch it.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components,\n      props: {\n        \"id\": \"update\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h2\",\n      props: {\n        \"href\": \"#update\",\n        \"aria-label\": \"update permalink\",\n        \"className\": \"anchor\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"svg\",\n      components: components,\n      parentName: \"a\",\n      props: {\n        \"aria-hidden\": \"true\",\n        \"focusable\": \"false\",\n        \"height\": \"16\",\n        \"version\": \"1.1\",\n        \"viewBox\": \"0 0 16 16\",\n        \"width\": \"16\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"path\",\n      components: components,\n      parentName: \"svg\",\n      props: {\n        \"fillRule\": \"evenodd\",\n        \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n      }\n    }))), `Update`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `I got `, React.createElement(\"a\", {\n      href: \"/blog/pitchfork-proxies-jet/\"\n    }, `trolled`), `.`)));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"p4ktldr","link":"https://p4ktldr.com/","repo":"https://github.com/prichey/p4ktldr","date":"2019","lang":"React"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/projects/personal/p4ktldr/"}}